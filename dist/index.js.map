{"version":3,"sources":["place-validator.js","core.js","reducer.js","store.js","command.js","handler.js","index.js"],"names":["isInteger","number","console","log","bold","bgBrightRed","white","isOutsideGrid","placeValues","gridSize","get","isNegativeNumber","validatePosition","validateFacing","validFacingValue","NORTH","SOUTH","EAST","WEST","has","validatePlaceValues","GRID_SIZE","x","y","INITIAL_STATE","place","state","immbutablePlaceValues","set","keepWithInGrid","change","maximumValue","position","move","updateIn","getIn","rotateLeft","facing","rotateRight","makeCorrectRotation","direction","rotate","rotateDirection","update","report","bgBrightBlue","timesReportet","reducer","action","type","makeStore","handleSingleCommand","input","handleCommandWithParameter","inputType","inputParameters","split","f","length","parseInt","handleCommand","command","toUpperCase","trim","actionWithArguments","readline","require","createInterface","process","stdin","output","stdout","store","rainbow","random","handleLineInput","forEach","dispatch","prompt","on","exit","setPrompt"],"mappings":"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","file":"index.js","sourceRoot":"../src","sourcesContent":["import {Map} from 'immutable';\n\n//check if the cordinate is integer\nfunction isInteger(number){\n\tif(typeof number ==='number' && (number%1) === 0){\n\t\treturn false;\n\t}\n\tconsole.log('                                      '.bold.bgBrightRed.white);\n\tconsole.log('  Please enter number as coordinates  '.bold.bgBrightRed.white);\n\tconsole.log('                                      '.bold.bgBrightRed.white);\n\treturn true;\n}\n\nfunction isOutsideGrid(placeValues, gridSize){\n\tif(placeValues.get('x') > gridSize.get('x') ||\n\t   placeValues.get('y') > gridSize.get('y')){\n\t\tconsole.log('                                         '.bold.bgBrightRed.white);\n\t\tconsole.log('  The coordinates are outside grid area  '.bold.bgBrightRed.white);\n\t\tconsole.log('                                         '.bold.bgBrightRed.white);\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfunction isNegativeNumber(placeValues){\n\tif(placeValues.get('y') < 0 || placeValues.get('x') < 0){\n\t\tconsole.log('                                         '.bold.bgBrightRed.white);\n\t\tconsole.log('  The coordinates are outside grid area  '.bold.bgBrightRed.white);\n\t\tconsole.log('                                         '.bold.bgBrightRed.white);\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n//Validates position\nfunction validatePosition(placeValues, gridSize){\n\tif(isInteger(placeValues.get('y')) ||\n\t   isInteger(placeValues.get('x')) ||\n\t   isNegativeNumber(placeValues)\t\t||\n\t   isOutsideGrid(placeValues, gridSize)){\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n/**\n * Checks that facing is valid string.\n * @param  {Immutable.Map} placeValues\n * @return {Boolean}\n */\n//Checks facing of pacman\nfunction validateFacing(placeValues){\n\tconst validFacingValue = Map({\n\t\tNORTH: true,\n\t\tSOUTH: true,\n\t\tEAST: true,\n\t\tWEST: true\n\t});\n\tif(validFacingValue.has(placeValues.get('f'))){\n\t\treturn true;\n\t}else{\n\t\tconsole.log('                                                     '.bold.bgBrightRed.white);\n\t\tconsole.log('  Please enter NORTH, EAST, SOUTH or WEST as facing  '.bold.bgBrightRed.white);\n\t\tconsole.log('                                                     '.bold.bgBrightRed.white);\n\t}\n}\n\n//validate place values \nexport function validatePlaceValues(placeValues, gridSize){\n\tif(!validateFacing(placeValues)){\n\t\treturn false;\n\t}\n\tif(!validatePosition(placeValues,gridSize)){\n\t\treturn false;\n\t}\n\treturn true;\n}","import {Map} from 'immutable';\nimport {validatePlaceValues} from './place-validator';\n\n\nexport const GRID_SIZE = Map({\n\tx:5,\n\ty:5\n});\nexport const INITIAL_STATE = Map();\n\n//Retrive old state and return new state\n\nexport function place(state, placeValues) {\n\tconst immbutablePlaceValues = Map(placeValues);\n\tconst gridSize = state.get('gridSize', GRID_SIZE);\n\tif(!validatePlaceValues(immbutablePlaceValues,gridSize)){\n\t\treturn state;\n\t}\n  return state\n  \t.set('isPlaced', true)\n  \t.set('gridSize', gridSize)\n  \t.set('position', Map({\n  \t\tx: immbutablePlaceValues.get('x'),\n  \t\ty: immbutablePlaceValues.get('y')\n  \t}))\n  \t.set('facing', immbutablePlaceValues.get('f'));\n}\n\n//move pacman position and keep it in grid\n\nfunction keepWithInGrid(change,maximumValue){\n\treturn position =>{\n\t\tif(change === 'increase' && position +1 !== maximumValue){\n\t\t\treturn position + 1;\n\t\t}\n\t\tif(change === 'decrease' && position !== 0){\n\t\t\treturn position - 1;\n\t\t}\n\t\tconsole.log('                                   '.bold.bgBrightRed.white);\n\t\tconsole.log('  Pacman cannot go outside of grid '.bold.bgBrightRed.white);\n\t\tconsole.log('                                   '.bold.bgBrightRed.white);\n\t\treturn position;\n\t};\n};\n\n//Move pacman depending on the side which pacman is facing\n//return old state if pacman is not placed\n\nexport function move(state) {\n\tif(!state.get('isPlaced')){\n\n\t\tconsole.log('                                '.bold.bgBrightRed.white);\n\t\tconsole.log('  Pacman is not placed on grid  '.bold.bgBrightRed.white);\n\t\tconsole.log('                                '.bold.bgBrightRed.white);\n\t\treturn state;\n\t}\n\tswitch (state.get('facing')) {\n\tcase 'NORTH':\n\t  return state.updateIn(['position', 'y'], keepWithInGrid('increase', state.getIn(['gridSize', 'y'])));\n\tcase 'SOUTH':\n\t  return state.updateIn(['position', 'y'], keepWithInGrid('decrease'));\n\tcase 'EAST':\n\t\treturn state.updateIn(['position', 'x'], keepWithInGrid('increase', state.getIn(['gridSize', 'x'])));\n\tcase 'WEST':\n\t\treturn state.updateIn(['position', 'x'], keepWithInGrid('decrease'));\n\t}\n\treturn state;\n}\n\n//Rotate pacman left\n\nfunction rotateLeft(facing){\n\tswitch(facing){\n\t\tcase 'NORTH':\n\t\t\treturn 'WEST';\n\t\tcase 'SOUTH':\n\t\t\treturn 'EAST';\n\t\tcase 'EAST':\n\t\t\treturn 'NORTH';\n\t\tcase 'WEST':\n\t\t\treturn 'SOUTH';\n\t}\n}\n\n//Rotate pacman right\n\nfunction rotateRight(facing){\n\tswitch(facing){\n\t\tcase 'NORTH':\n\t\t\treturn 'EAST';\n\t\tcase 'SOUTH':\n\t\t\treturn 'WEST';\n\t\tcase 'EAST':\n\t\t\treturn 'SOUTH';\n\t\tcase 'WEST':\n\t\t\treturn 'NORTH';\n\t}\n}\n\n//Rotate pacman depending depending upon the side pacman is facing \n\nfunction makeCorrectRotation(direction){\n\treturn facing =>{\n\t\tif(direction === 'LEFT'){\n\t\t\treturn rotateLeft(facing);\n\t\t}\n\t\tif(direction === 'RIGHT'){\n\t\t\treturn rotateRight(facing);\n\t\t}\n\t};\n}\n\n//Rotate robot if placed on grid\n\nexport function rotate(state, rotateDirection) {\n\t\tif(!state.get('isPlaced')){\n\t\tconsole.log('                                '.bold.bgBrightRed.white);\n\t\tconsole.log('  Pacman is not placed on grid  '.bold.bgBrightRed.white);\n\t\tconsole.log('                                '.bold.bgBrightRed.white);\n\t\t\treturn state;\n\t\t}\n\t\tif(rotateDirection !== 'LEFT' && rotateDirection !== 'RIGHT'){\n\t\t\treturn state;\n\t\t}\n\t\treturn state.update('facing', makeCorrectRotation(rotateDirection));\n}\n\n//Print report if pacman is placed\n\nexport function report(state){\n\tif(!state.get('isPlaced')){\n\t\treturn state;\n\t}\n\tconsole.log('                       '.bgBrightBlue.bold.white);\n\tconsole.log('  Pacman\\'s Coordinate  '.bgBrightBlue.bold.white);\n\tconsole.log(`  X: ${state.getIn(['position', 'x'])}                 `.bgBrightBlue.bold.white);\n\tconsole.log(`  Y: ${state.getIn(['position', 'y'])}                 `.bgBrightBlue.bold.white);\n\tconsole.log(`  F: ${state.get('facing')}             `.bgBrightBlue.bold.white);\n\tconsole.log('                       '.bgBrightBlue.bold.white);\n\n\treturn state.update('haveReportet', 0, timesReportet => timesReportet + 1);\n}","import {place, rotate, move, report, INITIAL_STATE} from './core';\n\n//Retrive current state and return new state\nexport default function reducer(state = INITIAL_STATE, action) {\n\tswitch (action.type) {\n\t\tcase 'PLACE':\n\t\t\treturn place(state, action.position);\n\t\tcase 'ROTATE':\n\t\t\treturn rotate(state, action.direction);\n\t\tcase 'MOVE':\n\t\t\treturn move(state);\n\t\tcase 'REPORT':\n\t\t\treturn report(state);\n\t}\n\treturn state;\n}","import {createStore} from 'redux';\nimport reducer from './reducer';\n\nexport default function makeStore() {\n  return createStore(reducer);\n}","export function place(position) {\n\treturn {\n\t\ttype: 'PLACE',\n\t\tposition\n\t};\n}\n\nexport function move() {\n\treturn {\n\t\ttype: 'MOVE'\n\t};\n}\n\nexport function report() {\n\treturn {\n\t\ttype: 'REPORT'\n\t};\n}\nexport function rotate(direction) {\n\treturn {\n\t\ttype: 'ROTATE',\n\t\tdirection\n\t};\n}","import { from } from \"core-js/fn/array\";\nimport {place, rotate, move, report} from './command';\n\n//Handle single word commands\nfunction handleSingleCommand(input){\n    if(input === 'MOVE'){\n        return [move()]\n    }\n    if(input === 'LEFT' || input === 'RIGHT'){\n        return [rotate(input)]\n    }\n    if(input === 'REPORT'){\n        return [report()]\n    }\n    console.log('                   '.bold.bgBrightRed.white);\n    console.log('  Invalid Command  '.bold.bgBrightRed.white);\n    console.log('                   '.bold.bgBrightRed.white);\n    return[]\n}\n\n//Handle place command\nfunction handleCommandWithParameter(input){\n    const [inputType, inputParameters] = input.split(' '),\n    [x,y,f] = inputParameters.split(',');\n\n    if(inputType !== 'PLACE' || inputParameters.split(',').length !== 3){\n\n\t\tconsole.log('                                '.bold.bgBrightRed.white);\n\t\tconsole.log('  PLACE command is not correct  '.bold.bgBrightRed.white);\n\t\tconsole.log('  example: PLACE 0,0,EAST       '.bold.bgBrightRed.white);\n\t\tconsole.log('                                '.bold.bgBrightRed.white);\n        return[]\n    }\n    return [place({\n        x: parseInt(x,10),\n        y: parseInt(y, 10),\n        f: f\n    })];\n}\n\n//Handle commands\nexport function handleCommand(input){\n    const command = input.toUpperCase().trim(),\n        actionWithArguments = command.split(' ').length > 1;\n    if(actionWithArguments){\n        return handleCommandWithParameter(command);\n    }\n    return handleSingleCommand(command);\n}\n","import makeStore from './store';\r\nimport {handleCommand} from './handler';\r\nimport 'colors';\r\nconst readline = require('readline')\r\n.createInterface({\r\n\tinput: process.stdin,\r\n\toutput: process.stdout\r\n});\r\nconst store = makeStore();\r\n\r\nconsole.log('\\nPacman Simulator'.rainbow.bold);\r\nconsole.log('\\nHere\\'s a list of input commands to navigate pacman\\n'.bold);\r\nconsole.log('                   '.bgBrightBlue.bold.white);\r\nconsole.log('  - PLACE X,Y,F    '.bgBrightBlue.bold.white);\r\nconsole.log('  - MOVE           '.bgBrightBlue.bold.white);\r\nconsole.log('  - LEFT           '.bgBrightBlue.bold.white);\r\nconsole.log('  - RIGHT          '.bgBrightBlue.bold.white);\r\nconsole.log('  - REPORT         '.bgBrightBlue.bold.white);\r\nconsole.log('                   '.bgBrightBlue.bold.white);\r\nconsole.log('\\nHave Fun...\\n'.random);\r\n\r\nfunction handleLineInput(input){\r\n\tconst action = handleCommand(input);\r\n\taction.forEach(store.dispatch);\r\n\treadline.prompt();\r\n}\r\n\r\nreadline\r\n.on('line', handleLineInput)\r\n.on('close', ()=> {\r\n\tconsole.log('Thanks for playing');\r\n\tprocess.exit(0);\r\n})\r\n.setPrompt('Pacman> ');\r\nreadline.prompt();"]}